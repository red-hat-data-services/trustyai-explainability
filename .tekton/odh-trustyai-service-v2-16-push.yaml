apiVersion: tekton.dev/v1
kind: PipelineRun
#retest3
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/red-hat-data-services/trustyai-explainability?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    build.appstudio.openshift.io/build-nudge-files: "build/operator-nudging.yaml"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "push" 
      && target_branch == "rhoai-2.16"
      && ( !".tekton/**".pathChanged() || ".tekton/odh-trustyai-service-v2-16-push.yaml".pathChanged() )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: rhoai-v2-16
    appstudio.openshift.io/component: odh-trustyai-service-v2-16
    pipelines.appstudio.openshift.io/type: build
  name: odh-trustyai-service-v2-16-on-push
  namespace: rhoai-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/rhoai/odh-trustyai-service-rhel8:{{target_branch}}
  - name: dockerfile
    value: Dockerfile.konflux
  - name: path-context
    value: .
  - name: build-config-git-url
    value: 'https://github.com/red-hat-data-services/RHOAI-Build-Config.git'
  - name: build-config-revision
    value: 'rhoai-2.16'
  - name: build-config-path
    value: 'trustyai-pig-builds/build-config.yaml'
  - name: pnc-cli-config-git-url
    value: 'https://gitlab.cee.redhat.com/project-ncl/utils.git'
  - name: pnc-cli-config-revision
    value: 'master'
  - name: pnc-profile
    value: 'prod'
  - name: prefetch-input
    value: [{"path": ".", "type": "rpm"}, {"path": ".", "type": "generic"}]
  pipelineSpec:
    description: |
      This pipeline is ideal for building container images from a Containerfile while reducing network traffic.

      _Uses `buildah` to create a container image. It also optionally creates a source image and runs some build-time tests. EC will flag a violation for [`trusted_task.trusted`](https://enterprisecontract.dev/docs/ec-policies/release_policy.html#trusted_task__trusted) if any tasks are added to the pipeline.
      This pipeline is pushed as a Tekton bundle to [quay.io](https://quay.io/repository/konflux-ci/tekton-catalog/pipeline-docker-build?tab=tags)_
    finally:
    - name: show-sbom
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      taskRef:
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:945a7c9066d3e0a95d3fddb7e8a6992e4d632a2a75d8f3a9bd2ff2fef0ec9aa0
        - name: kind
          value: task
        resolver: bundles
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: image-url
        value: $(params.output-image)
      - name: build-task-status
        value: $(tasks.build-image-index.status)
      taskRef:
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:870d9a04d9784840a90b7bf6817cd0d0c4edfcda04b1ba1868cae625a3c3bfcc
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
    - name: send-slack-notification
      params:
      - name: message
        value: "$(tasks.rhoai-init.results.slack-message-failure-text)"
      - name: secret-name
        value: rhoai-konflux-secret
      - name: key-name
        value: slack-webhook
      taskRef:
        params:
        - name: name
          value: slack-webhook-notification
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:dc17b70633363d78414b8c06dc1660d25742935f106a6116995638e1210c2730
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.status)
        operator: in
        values:
        - "Failed"
    params:
    - name: build-config-git-url
      description: Source Repository URL containing the build configuration
      type: string
    - name: build-config-revision
      default: ""
      description: Revision of the Source Repository containing the build configuration
      type: string
    - name: build-config-path
      default: "build-config.yaml"
      description: Full path of the build configuration file
      type: string
    - description: Source Repository URL containing the PNC CLI configuration
      name: pnc-cli-config-git-url
      type: string
    - default: ""
      description: Revision of the Source Repository containing the PNC CLI configuration
      name: pnc-cli-config-revision
      type: string
    - name: pnc-profile
      value: 'prod'

    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where
        to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter
        path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "true"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like
        1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: "true"
      description: Build a source image.
      name: build-source-image
      type: string
    - default: "false"
      description: Add built image into an OCI image index
      name: build-image-index
      type: string
    - default: []
      description: Array of --build-arg values ("arg=value" strings) for buildah
      name: build-args
      type: array
    - default: ""
      description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
      name: build-args-file
      type: string
    results:
    - description: ""
      name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - description: ""
      name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: rhoai-init
      params:
      - name: pipelinerun-name
        value: "$(context.pipelineRun.name)"
      taskSpec:
        results:
        - description: Notification text to be posted to slack
          name: slack-message-failure-text
        steps:
        - image: quay.io/rhoai-konflux/alpine:latest
          name: rhoai-init
          env:
          - name: slack_message
            valueFrom:
              secretKeyRef:
                name: rhoai-konflux-secret
                key: slack-component-failure-notification
          script: |
            pipelinerun_name=$(params.pipelinerun-name)
            target_branch={{target_branch}}
            echo "pipelinerun-name = $pipelinerun_name"

            application_name=${target_branch/rhoai-/}
            application_name=rhoai-v${application_name/./-}
            echo "application-name = $application_name"

            component_name=${pipelinerun_name/-on-*/}
            echo "component-name = $component_name"

            KONFLUX_SERVER="https://konflux.apps.stone-prod-p02.hjvn.p1.openshiftapps.com"
            build_url="${KONFLUX_SERVER}/application-pipeline/workspaces/rhoai/applications/${application_name}/pipelineruns/${pipelinerun_name}/logs"

            build_time="$(date +%Y-%m-%dT%H:%M:%S)"

            slack_message=${slack_message/__BUILD__URL__/$build_url}
            slack_message=${slack_message/__PIPELINERUN__NAME__/$pipelinerun_name}
            slack_message=${slack_message/__BUILD__TIME__/$build_time}

            echo -en "${slack_message}" > "$(results.slack-message-failure-text.path)"
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:0523b51c28375a3f222da91690e22eff11888ebc98a0c73c468af44762265c69
        - name: kind
          value: task
        resolver: bundles
      runAfter:
      - rhoai-init
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:d091a9e19567a4cbdc5acd57903c71ba71dc51d749a4ba7477e689608851e981
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth

    - name: clone-build-config-repository
      params:
      - name: url
        value: $(params.build-config-git-url)
      - name: revision
        value: $(params.build-config-revision)
      - name: CHAINS-GIT_URL
        value: $(params.build-config-git-url)
      - name: CHAINS-GIT_COMMIT
        value: $(params.build-config-revision)
      - name: subdirectory
        value: build-config
      - name: sslVerify
        value: false
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:d091a9e19567a4cbdc5acd57903c71ba71dc51d749a4ba7477e689608851e981
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth

    - name: clone-pnc-cli-config-repository
      params:
      - name: url
        value: $(params.pnc-cli-config-git-url)
      - name: revision
        value: $(params.pnc-cli-config-revision)
      - name: CHAINS-GIT_URL
        value: $(params.build-config-git-url)
      - name: CHAINS-GIT_COMMIT
        value: $(params.build-config-revision)
      - name: subdirectory
        value: cli-config
      - name: sslVerify
        value: false
      runAfter:
      - clone-build-config-repository
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:d091a9e19567a4cbdc5acd57903c71ba71dc51d749a4ba7477e689608851e981
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth

    - name: pnc-cli-build
      runAfter:
        - clone-pnc-cli-config-repository
      taskSpec:
        results:
          - description: The file containing the list of pnc built artifacts to be later installed inside the container build
            name: pnc-file-list
        steps:
          - name: run-pnc-build
            image: quay.io/redhat-user-workloads/konflux-jbs-pnc-tenant/pnc/pnc-cli@sha256:00f29bb186e3afedbffeb57942038f7d9ad747640e0a4ae2c53c573a8cdece74
            env:
              - name: SSO_SERVICE_ACCOUNT_NAME
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: svc.account.username
              - name: SSO_SERVICE_ACCOUNT_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: svc.account.password
              - name: PNC_PROFILE
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: pnc.profile

            script: |
              #!/bin/bash
              set -e

              echo -e "\n=== Build config ==="
              cat /workspace/source/build-config/$(params.build-config-path)
              cp /workspace/source/build-config/$(params.build-config-path) /workspace/source
              
              echo -e "===================="
              echo -e "\nReplacing credentials in the CLI config ..."
              envsubst '${SSO_SERVICE_ACCOUNT_NAME} ${SSO_SERVICE_ACCOUNT_CLIENT_SECRET}' < /workspace/source/cli-config/konflux/configs/pnc_cli/config.yaml > /workspace/source/config.yaml
              
              echo -e "\nStarting the PNC build ..."
              PNC_CLI_OUTPUT_FILE="/workspace/source/pnc-cli-run-output.json"
              java -jar /home/jboss/bacon.jar pig run --mode=FORCE --downloadAttempts=3 /workspace/source -p /workspace/source --profile ${PNC_PROFILE} --jsonOutput > $PNC_CLI_OUTPUT_FILE
              
              echo -e "\nFinished the PNC build!"
              echo -e "\n=== PNC build output ==="
              cat $PNC_CLI_OUTPUT_FILE
              echo -e "===================="
              
              echo -e "\nGetting the list of built files (to be used later in the container build) ..."
              jq '[.builds[].builtArtifacts[]?.downloadUrl ]' "$PNC_CLI_OUTPUT_FILE" > "$(results.pnc-file-list.path)"
              jq '{metadata: {version: "1.0"}, artifacts: [.builds[].builtArtifacts[]? | select(.downloadUrl | endswith(".zip")) | {download_url: .downloadUrl , checksums: {sha256: .sha256}}] }' $PNC_CLI_OUTPUT_FILE | yq -p json > "$(workspaces.source.path)/source/generic_lockfile.yaml"
              
              cat  $(results.pnc-file-list.path)
      workspaces:
      - name: source
        workspace: workspace

    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      - name: dev-package-managers
        value: "true"
      runAfter:
      - pnc-cli-build
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies@sha256:f53fe5482599b39ae2d1004cf09a2026fd9dd3822ab6ef46b51b4a398b0a3232
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.prefetch-input)
        operator: notin
        values:
        - ""
      workspaces:
      - name: source
        workspace: workspace
      - name: git-basic-auth
        workspace: git-auth
      - name: netrc
        workspace: netrc
    - name: build-container
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: BUILD_ARGS
        value:
        - PNC_FILES_JSON=$(tasks.pnc-cli-build.results.pnc-file-list)
        - $(params.build-args[*])
      - name: BUILD_ARGS_FILE
        value: $(params.build-args-file)
      - name: LABELS
        value:
          - version=v2.16.0
          - url=$(params.git-url)
          - release='$(tasks.clone-repository.results.commit-timestamp)'
          - git.url=$(params.git-url)
          - git.commit=$(params.revision)
          - io.openshift.tags="odh-trustyai-service"
      runAfter:
      - prefetch-dependencies
      taskRef:
        params:
        - name: name
          value: buildah
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.2@sha256:7779f9e48eda44aebae3597747f5d8c1cc3fbc3a98c2251ee20929d868b575f1
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace
    - name: build-image-index
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: ALWAYS_BUILD_INDEX
        value: $(params.build-image-index)
      - name: IMAGES
        value:
        - $(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: build-image-index
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:ebc17bb22481160eec6eb7277df1e48b90f599bebe563cd4f046807f4e32ced3
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
    - name: build-source-image
      params:
      - name: BINARY_IMAGE
        value: $(params.output-image)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: source-build
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-source-build:0.1@sha256:ddfa1fb418c1d9d55d7d70d39fe8f35ce05e96073bcd057bb6aaacd1f839cc51
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      - input: $(params.build-source-image)
        operator: in
        values:
        - "true"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: deprecated-base-image-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.4@sha256:5a1a165fa02270f0a947d8a2131ee9d8be0b8e9d34123828c2bef589e504ee84
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: clair-scan
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: clair-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.2@sha256:0a5421111e7092740398691d5bd7c125cc0896f29531d19414bb5724ae41692a
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: ecosystem-cert-preflight-checks
      params:
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: ecosystem-cert-preflight-checks
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1@sha256:df8a25a3431a70544172ed4844f9d0c6229d39130633960729f825a031a7dea9
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: sast-snyk-check
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: sast-snyk-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.2@sha256:3d62d7d9a55858903760c3b6288a64f777822f89226b4edbe8baaa1488222623
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: clamav-scan
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: clamav-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1@sha256:b4f450f1447b166da671f1d5819ab5a1485083e5c27ab91f7d8b7a2ff994c8c2
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: apply-tags
      params:
      - name: IMAGE
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: ADDITIONAL_TAGS
        value:
          - '{{target_branch}}-{{revision}}'
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: apply-tags
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.1@sha256:87fd7fc0e937aad1a8db9b6e377d7e444f53394dafde512d68adbea6966a4702
        - name: kind
          value: task
        resolver: bundles
    - name: push-dockerfile
      params:
      - name: IMAGE
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: push-dockerfile
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-push-dockerfile:0.1@sha256:48bb2ee92ea528b28c0814c9cc126021e499a081b69431987a774561e9ac8047
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
    - name: rpms-signature-scan
      params:
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: rpms-signature-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan:0.2@sha256:28aaf87d61078a0aeeeabcae455eda7d05c4f9b81d8995bdcf3dde95c1a7a77b
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}